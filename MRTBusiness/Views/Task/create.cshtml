@model MaratonBusiness.Models.DbTask

@{
    ViewBag.Title = "create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<ol class="breadcrumb">
    <li><a href="/">Home</a></li>
    <li><a href="@Url.Action("index","Task")">Task</a></li>
    <li><a href="#">Create</a></li>
</ol>
<hr />

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Input</label>
            <div class="col-md-10">
               @Html.TextArea("Inputs")
            </div>
        </div>
 
        <div class="form-group">
            @Html.Hidden("Pipelines")
            <label class="control-label col-md-2">Pipelines</label>
            <div class="col-md-10">
                <p><a href="#" class="btn btn-success" data-toggle="modal" data-target="#pipelineView"><span class="glyphicon glyphicon-plus"></span></a></p>

                <div id="pipelinelist">
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.Hidden("Servants")
            <label class="control-label col-md-2">Servants</label>
            <div class="col-md-10">
                <p><a href="#" class="btn btn-success" data-toggle="modal" data-target="#servantView"><span class="glyphicon glyphicon-plus"></span></a></p>

                <div id="servantlist">
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-info" />
            </div>
        </div>
    </div>
} 

<div class="modal fade" id="pipelineView" tabindex="-1" role="dialog" aria-labelledby="pipeView">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel">Pipeline Selection</h4>
            </div>
            <div id="pipelineContent" class="modal-body">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="servantView" tabindex="-1" role="dialog" aria-labelledby="pipeView">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel">Servant Selection</h4>
            </div>
            <div id="servantContent" class="modal-body">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $("#pipelineView").on('show.bs.modal', function (e) {
            $.get("@Url.Action("pipelinelist")", null, function (data, status, jxhr) {
                $("#pipelineContent").html(data);
            });
        })

        $("#servantView").on('show.bs.modal', function (e) {
            $.get("@Url.Action("servantlist")", null, function (data, status, jxhr) {
                $("#servantContent").html(data);
            });
        })
    });

    var pipes = [];
    var servants = [];
    function addPipe(pipe)
    {
        pipes.push(pipe);
        $("#pipeView").modal("hide");
        buildPipeTag();
    }

    function selectServant(servant)
    {
        for (var i = 0; i < servants.length; i++) {
            if (servants[i].id == servant.id) {
                return;
            }
        }

        servants.push(servant);
        $("#servantView").modal("hide");
        buildServantsTag();
    }

    function deleteServant(index) {
        var tmp = [];
        for (var i = 0; i < servants.length; i++) {
            if (i == index) {
                continue;
            }

            tmp.push(pipes[i]);
        }

        servants = tmp;
        buildServantsTag();
    }

    function deletePipe(index) {
        var tmp = [];
        for (var i = 0; i < pipes.length; i++) {
            if( i == index )
            {
                continue;
            }

            tmp.push(pipes[i]);
        }

        pipes = tmp;
        buildPipeTag();
    }

    function buildServantsTag() {
        $("#Servants").val("");
        $("#servantlist").html("");
        for (var i = 0; i < servants.length; i++) {
            $("#servantlist").append('<div><span>' + servants[i].id + '<a href="javascript:deleteServant(' + i + ')"><i class="glyphicon glyphicon-remove"></i></a></span></div>');
            $("#Servants").val($("#Servants").val() + "," + servants[i].id);
        }
    }

    function buildPipeTag()
    {
        $("#Pipelines").val("");
        $("#pipelinelist").html("");
        for (var i = 0; i < pipes.length; i++) {
            $("#pipelinelist").append('<div><span>' + pipes[i].name + '<a href="javascript:deletePipe(' + i + ')"><i class="glyphicon glyphicon-remove"></i></a></span></div>');
            $("#Pipelines").val($("#Pipelines").val() + "," + pipes[i].id);
        }
    }
</script>